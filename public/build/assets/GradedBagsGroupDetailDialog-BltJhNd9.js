import{r as h,j as e,a as f}from"./app-C6wr7xOM.js";import{B as g,t as o}from"./index-ByhlrBJ7.js";import{D as M}from"./data-table-BHfKkASQ.js";import{D as $,a as B,b as H,c as R,d as z}from"./dialog-Dune_8vQ.js";import{p as v}from"./printGradedBarcodes-BSSWFjmM.js";import{P as N}from"./printer-D9gZcDgz.js";import{f as S}from"./format-CiT9Q78D.js";import"./input-3tYqWR7g.js";import"./select-Kz6bl7S3.js";import"./index-CrXPg-Qx.js";import"./check-Dpvvyly-.js";import"./chevrons-up-down--zfVwbuH.js";import"./chevron-left-BDlwHnm4.js";import"./chevron-right-Co1gBxOU.js";import"./index-CdYzvuDs.js";function ae({isOpen:l,onClose:x,item_id:n,grade_id:b,weight_id:c,created_date:d,itemName:m,gradeName:p,weightValue:s,totalQuantity:C}){const[i,P]=h.useState("kg"),[u,k]=h.useState(void 0);h.useEffect(()=>{l&&(async()=>{try{const t=await f.get(`/api/weights/${c}`);t.data&&t.data.weight_type&&P(t.data.weight_type);const r=await f.get(`/api/items/${n}`);r.data&&r.data.section&&k(r.data.section.name)}catch(t){console.error("Error fetching details:",t)}})()},[l,c,n]);const E=async a=>{var t,r,y,j,w,D;try{await v({bags:[a],partyName:"Graded Items",weightValue:((t=a.weight)==null?void 0:t.weight)||s,itemName:((r=a.item)==null?void 0:r.name)||m,itemSection:((j=(y=a.item)==null?void 0:y.section)==null?void 0:j.name)||u,gradeName:((w=a.grade)==null?void 0:w.name)||p,isSingle:!0,weightType:i,pairCount:i==="pair"?parseInt(((D=a.weight)==null?void 0:D.weight)||s):void 0}),o.success(`Print initiated for graded barcode ${a.barcode}.`)}catch(T){console.error("Error printing graded barcode:",T),o.error("Failed to print graded barcode.")}},G=async()=>{try{const a=await f.get("/api/graded-bags-pools-with-barcodes",{params:{item_id:n,grade_id:b,weight_id:c,created_date:d}}),t=a.data.data||a.data;if(t.length===0){o.error("No bags found to print.");return}await v({bags:t,partyName:"Graded Items",weightValue:s,itemName:m,itemSection:u,gradeName:p,weightType:i,pairCount:i==="pair"?parseInt(s):void 0}),o.success(`Print initiated for ${t.length} barcodes.`)}catch(a){console.error("Error fetching bags for printing:",a),o.error("Failed to fetch bags for printing.")}},I=[{label:"Barcode",key:"barcode"},{label:"Created At",key:"created_at"}],A=[{id:"barcode",header:"Barcode",enableSorting:!0,cell:({row:a})=>e.jsx("div",{className:"flex items-center gap-2",children:e.jsx("span",{className:"font-mono text-sm font-medium",children:a.original.barcode})})},{id:"created_at",header:"Created At",enableSorting:!0,cell:({row:a})=>e.jsx("div",{className:"flex items-center gap-2",children:e.jsx("span",{children:S(new Date(a.original.created_at),"dd/MM/yyyy HH:mm")})})},{id:"actions",header:"Actions",enableSorting:!1,cell:({row:a})=>e.jsx("div",{className:"flex items-center gap-2",children:e.jsxs(g,{variant:"outline",size:"sm",onClick:t=>{t.stopPropagation(),E(a.original)},className:"h-8 px-2",title:"Print this graded barcode label",children:[e.jsx(N,{className:"mr-1 h-3 w-3"}),"Print"]})})}];return e.jsx($,{open:l,onOpenChange:x,children:e.jsxs(B,{className:"max-w-4xl max-h-[90vh] overflow-y-auto",children:[e.jsxs(H,{children:[e.jsx(R,{children:"Graded Bags Details"}),e.jsxs(z,{children:["Individual graded bags for ",m," - ",p," - ",s," ",i==="pair"?"pairs":"kg",e.jsx("br",{}),"Created on: ",S(new Date(d),"dd/MM/yyyy")," | Total Quantity: ",C]})]}),e.jsx("div",{className:"flex justify-end mb-4",children:e.jsxs(g,{variant:"default",onClick:G,className:"flex items-center gap-2",children:[e.jsx(N,{className:"h-4 w-4"}),"Print All Labels"]})}),e.jsx("div",{className:"mt-2",children:e.jsx(M,{filterableColumns:I,route:"/api/graded-bags-pools-with-barcodes",columns:A,pageSize:20,params:{item_id:n,grade_id:b,weight_id:c,created_date:d}})}),e.jsx("div",{className:"flex justify-end mt-4",children:e.jsx(g,{variant:"outline",onClick:x,children:"Close"})})]})})}export{ae as default};
