import{r as x,m as V,j as e,a as N}from"./app-DZIhMt8j.js";import{B as Q,t as o}from"./index-CG21suBH.js";import{f as R}from"./dialog-DTFu0e2V.js";import{I as z}from"./input-D_EtKzRg.js";import{L as v}from"./label-gKVdXsPW.js";import{S as K,a as M,b as U,c as W,d as X}from"./select-DRwDwua0.js";import{A as Y}from"./async-select-B4O2T7q2.js";import{P as G}from"./progress-To331o-9.js";import{p as F}from"./printBarcodes-uvq3ioVe.js";import{C as H}from"./circle-alert-CwLimYxZ.js";import{P as A}from"./printer-DbdHdLR5.js";import"./index-CNZzqPiH.js";import"./index-BgEnKjmm.js";import"./floating-ui.react-dom-wzEoeOMV.js";import"./floating-ui.dom-C5vApqfE.js";import"./check-DofblWpS.js";function pe({importData:s,onSuccess:g}){const[_,B]=x.useState(!1),[j,k]=x.useState([]),[a,m]=x.useState({current:0,total:0,isProcessing:!1,isPrinting:!1,currentBatch:[]}),{data:i,setData:f,errors:p,setError:S,reset:q,clearErrors:I}=V({import_id:s.id,party_id:"",weight_id:"",quantity:1}),[y,E]=x.useState(null);x.useEffect(()=>{(async()=>{try{const n=await N.get("/api/weights");k(n.data)}catch(n){console.error("Error fetching weights:",n),o.error("Failed to load weights.")}})(),s&&s.type==="local"&&(E(s.party),f("party_id",s.party.id))},[s]);const O=async t=>{var l;return(await N.post("/import-bags/batch",t,{headers:{"X-CSRF-TOKEN":((l=document.querySelector('meta[name="csrf-token"]'))==null?void 0:l.getAttribute("content"))||"","Content-Type":"application/json",Accept:"application/json"}})).data},T=async()=>{var h;const t=i.quantity,n=10,l=Math.ceil(t/n);m({current:0,total:l,isProcessing:!0,isPrinting:!1,currentBatch:[]});try{for(let r=0;r<l;r++){const d=Math.min(n,t-r*n);m(u=>({...u,current:r+1,isProcessing:!0,isPrinting:!1}));const c={import_id:i.import_id,party_id:i.party_id,weight_id:i.weight_id,quantity:d},C=(await O(c)).import_bags;m(u=>({...u,currentBatch:C,isProcessing:!1,isPrinting:!0}));const w=j.find(u=>u.id.toString()===i.weight_id);await F({bags:C,partyName:y.name,containerNo:s==null?void 0:s.container_no,movementDate:s==null?void 0:s.movement_date,weightValue:(w==null?void 0:w.weight)||"Unknown"}),o.success(`Batch ${r+1}/${l} completed: ${d} bags created and printed.`)}m({current:0,total:0,isProcessing:!1,isPrinting:!1,currentBatch:[]}),o.success(`All ${t} bags created and printed successfully!`),q(),g==null||g()}catch(r){if(console.error("Error in batch processing:",r),((h=r.response)==null?void 0:h.status)===422){const d=r.response.data.errors;Object.keys(d).forEach(c=>{S(c,d[c][0])}),o.error("Please check the form for errors.")}else o.error("Failed to process batches. Please try again later.");m({current:0,total:0,isProcessing:!1,isPrinting:!1,currentBatch:[]})}},$=async t=>{var n,l;if(t.preventDefault(),I(),B(!0),i.quantity<=10)try{const r=(await N.post("/import-bags",i,{headers:{"X-CSRF-TOKEN":((n=document.querySelector('meta[name="csrf-token"]'))==null?void 0:n.getAttribute("content"))||"","Content-Type":"application/json",Accept:"application/json"}})).data.import_bags||[],d=r.map(c=>c.barcode);if(o.success(`${i.quantity} bags created successfully!`),r.length>0&&y){const c=j.find(b=>b.id.toString()===i.weight_id);try{await F({bags:r,partyName:y.name,containerNo:s==null?void 0:s.container_no,movementDate:s==null?void 0:s.movement_date,weightValue:(c==null?void 0:c.weight)||"Unknown"}),o.success("Labels printed successfully!")}catch(b){console.error("Print error:",b),o.error("Bags created but printing failed. You can print them later.")}}q(),g==null||g()}catch(h){if(console.error("Error creating import bags:",h),((l=h.response)==null?void 0:l.status)===422){const r=h.response.data.errors;Object.keys(r).forEach(d=>{S(d,r[d][0])}),o.error("Please check the form for errors.")}else o.error("Failed to create import bags. Please try again later.")}else await T();B(!1)},P=a.isProcessing||a.isPrinting,L=a.total>0?a.current/a.total*100:0;return e.jsxs("form",{onSubmit:$,className:"space-y-6",children:[e.jsxs("div",{className:"grid gap-4",children:[s.type==="container"&&e.jsxs("div",{className:"grid gap-2",children:[e.jsx(v,{htmlFor:"party_id",children:"Supplier"}),e.jsx(Y,{route:"/api/parties/select",params:{type:"supplier"},value:y,onChange:t=>{E(t),f("party_id",(t==null?void 0:t.id)||"")},placeholder:"Select a supplier",renderOption:t=>t.name,renderSelected:t=>t.name}),p.party_id&&e.jsx("p",{className:"text-destructive text-sm",children:p.party_id})]}),e.jsxs("div",{className:"grid gap-2",children:[e.jsx(v,{htmlFor:"weight_id",children:"Weight"}),e.jsxs(K,{value:i.weight_id.toString(),onValueChange:t=>f("weight_id",t),children:[e.jsx(M,{children:e.jsx(U,{placeholder:"Select weight"})}),e.jsx(W,{children:j.map(t=>e.jsxs(X,{value:t.id.toString(),children:[t.weight," kg"]},t.id))})]}),p.weight_id&&e.jsx("p",{className:"text-destructive text-sm",children:p.weight_id})]}),e.jsxs("div",{className:"grid gap-2",children:[e.jsx(v,{htmlFor:"quantity",children:"Quantity"}),e.jsx(z,{id:"quantity",type:"number",min:"1",value:i.quantity,onChange:t=>f("quantity",parseInt(t.target.value)),placeholder:"Enter quantity",required:!0}),p.quantity&&e.jsx("p",{className:"text-destructive text-sm",children:p.quantity}),i.quantity>10&&e.jsxs("div",{className:"flex items-center gap-2 text-sm text-amber-600",children:[e.jsx(H,{className:"h-4 w-4"}),e.jsx("span",{children:"Quantities over 10 will be processed in batches of 10 with automatic printing."})]})]}),P&&e.jsxs("div",{className:"border rounded-lg p-4 bg-blue-50",children:[e.jsxs("div",{className:"flex items-center gap-2 mb-2",children:[e.jsx(A,{className:"h-4 w-4 text-blue-600"}),e.jsxs("span",{className:"font-medium text-blue-900",children:[a.isPrinting?"Printing Batch":"Creating Batch"," ",a.current," of ",a.total]})]}),e.jsx(G,{value:L,className:"mb-2"}),e.jsx("div",{className:"text-sm text-blue-700",children:a.isPrinting?e.jsxs("div",{className:"flex items-center gap-2",children:[e.jsx("div",{className:"animate-pulse",children:"üñ®Ô∏è"}),e.jsxs("span",{children:["Printing ",a.currentBatch.length," barcodes... Please ensure printer is ready."]})]}):e.jsxs("div",{className:"flex items-center gap-2",children:[e.jsx("div",{className:"animate-spin",children:"‚è≥"}),e.jsx("span",{children:"Creating import bags..."})]})}),a.currentBatch.length>0&&e.jsxs("div",{className:"mt-3 p-2 bg-white rounded border",children:[e.jsx("div",{className:"text-xs text-gray-600 mb-1",children:"Current Batch Barcodes:"}),e.jsxs("div",{className:"flex flex-wrap gap-1",children:[a.currentBatch.slice(0,5).map(t=>e.jsx("span",{className:"text-xs font-mono bg-gray-100 px-1 rounded",children:t.barcode},t.id)),a.currentBatch.length>5&&e.jsxs("span",{className:"text-xs text-gray-500",children:["+",a.currentBatch.length-5," more"]})]})]})]})]}),e.jsx(R,{children:e.jsx(Q,{type:"submit",disabled:_||P,className:"gap-2",children:P?e.jsxs(e.Fragment,{children:[e.jsx("div",{className:"animate-spin",children:"‚è≥"}),"Processing..."]}):_?"Creating...":e.jsxs(e.Fragment,{children:[e.jsx(A,{className:"h-4 w-4"}),"Create & Print Labels"]})})})]})}export{pe as default};
